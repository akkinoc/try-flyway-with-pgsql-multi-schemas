/*
 * This file is generated by jOOQ.
 */
package dev.akkinoc.try_flyway_with_postgres_multi_schemas.schema3


import dev.akkinoc.try_flyway_with_postgres_multi_schemas.schema3.tables.Schema3Table1
import dev.akkinoc.try_flyway_with_postgres_multi_schemas.schema3.tables.Schema3Table2

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Schema3 : SchemaImpl("schema3", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>schema3</code>
         */
        val SCHEMA3: Schema3 = Schema3()
    }

    /**
     * The table <code>schema3.schema3_table1</code>.
     */
    val SCHEMA3_TABLE1: Schema3Table1 get() = Schema3Table1.SCHEMA3_TABLE1

    /**
     * The table <code>schema3.schema3_table2</code>.
     */
    val SCHEMA3_TABLE2: Schema3Table2 get() = Schema3Table2.SCHEMA3_TABLE2

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Schema3Table1.SCHEMA3_TABLE1,
        Schema3Table2.SCHEMA3_TABLE2
    )
}
