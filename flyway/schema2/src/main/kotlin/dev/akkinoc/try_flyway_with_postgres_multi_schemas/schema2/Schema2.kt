/*
 * This file is generated by jOOQ.
 */
package dev.akkinoc.try_flyway_with_postgres_multi_schemas.schema2


import dev.akkinoc.try_flyway_with_postgres_multi_schemas.schema2.tables.Schema2Table1
import dev.akkinoc.try_flyway_with_postgres_multi_schemas.schema2.tables.Schema2Table2

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Schema2 : SchemaImpl("schema2", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>schema2</code>
         */
        val SCHEMA2: Schema2 = Schema2()
    }

    /**
     * The table <code>schema2.schema2_table1</code>.
     */
    val SCHEMA2_TABLE1: Schema2Table1 get() = Schema2Table1.SCHEMA2_TABLE1

    /**
     * The table <code>schema2.schema2_table2</code>.
     */
    val SCHEMA2_TABLE2: Schema2Table2 get() = Schema2Table2.SCHEMA2_TABLE2

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Schema2Table1.SCHEMA2_TABLE1,
        Schema2Table2.SCHEMA2_TABLE2
    )
}
